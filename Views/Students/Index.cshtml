 @model PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Index"; 
}

<h1>Index</h1>

<p>
    <!-- display a link that allows a Student object to be created (calls the Create() method from StudentsController) -->
    <a asp-action="Create">Create New</a>
</p>

<!-- a simple form containing a search box and submit button. Enables the user to find a specific Student based on text input -->
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" /> <!-- a label that is displayed just before the search field -->
            <input type="submit" value="Search" class="btn btn-default" /> | <!-- a submit button -->
            <a asp-action="Index">Back to Full List</a> <!-- displays a link that navigates to the previous list view -->
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <!-- add a heading that displays Last Name for this column in the table view -->
                @Html.DisplayNameFor(model => model.LastName) 
            </th>
            <th>
                <!-- add a heading that displays First/Middle Name for this column in the table view -->
                @Html.DisplayNameFor(model => model.FirstMidName)
            </th>
            <th>
                <!-- add a heading that displays Enrollment Date for this column in the table view -->
                @Html.DisplayNameFor(model => model.EnrollmentDate)
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        <!-- iterate through the contents of the Student collection, displaying the following object attributes -->
@foreach (var item in Model) {
        <tr>
            <td>
                <!-- fill in this table row with a student's Last Name -->
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                <!-- fill in this table row with a student's First & Middle Names -->
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                <!-- fill in this table row with a student's Enrollment Date -->
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <!-- display a hyperlink that allows the current view's data to be edited -->
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <!-- display a hyperlink that shows additional information about the given objects -->
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <!-- display a hyperlink for deleting Student objects -->
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
